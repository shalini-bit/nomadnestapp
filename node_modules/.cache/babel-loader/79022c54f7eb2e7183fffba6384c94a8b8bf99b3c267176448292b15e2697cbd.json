{"ast":null,"code":"import axios from \"axios\";\nexport const loginHandler = async (number, password, setAlert) => {\n  try {\n    const response = await axios.post(\"https://vast-blue-dove-wig.cyclic.app/api/auth/login\", {\n      number: number,\n      password: password\n    });\n    const {\n      accessToken,\n      username\n    } = response.data;\n    if (!accessToken || !username) {\n      throw new Error(\"Invalid response data from the server.\");\n    }\n    console.log(\"Logged IN\");\n    console.log({\n      accessToken,\n      username\n    });\n    localStorage.setItem(\"token\", accessToken);\n    localStorage.setItem(\"username\", username);\n    setAlert({\n      open: true,\n      message: \"Login Successful!\",\n      type: \"success\"\n    });\n    return {\n      accessToken,\n      username\n    };\n  } catch (err) {\n    console.error(\"Login error:\", err);\n    setAlert({\n      open: true,\n      message: \"Login failed. Please try again.\",\n      type: \"error\"\n    });\n    return {\n      accessToken: null,\n      username: null\n    };\n  }\n};","map":{"version":3,"names":["axios","loginHandler","number","password","setAlert","response","post","accessToken","username","data","Error","console","log","localStorage","setItem","open","message","type","err","error"],"sources":["D:/Projects/Capstone/frontend/NomadNest/nomadtest/src/services/login-service.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const loginHandler = async (number, password, setAlert) => {\n  try {\n    const response = await axios.post(\n      \"https://vast-blue-dove-wig.cyclic.app/api/auth/login\",\n      {\n        number: number,\n        password: password,\n      }\n    );\n    const { accessToken, username } = response.data;\n\n    if (!accessToken || !username) {\n      throw new Error(\"Invalid response data from the server.\");\n    }\n\n    console.log(\"Logged IN\");\n    console.log({ accessToken, username });\n    localStorage.setItem(\"token\", accessToken);\n    localStorage.setItem(\"username\", username);\n    setAlert({\n      open: true,\n      message: \"Login Successful!\",\n      type: \"success\",\n    });\n    return { accessToken, username };\n  } catch (err) {\n    console.error(\"Login error:\", err);\n    setAlert({\n      open: true,\n      message: \"Login failed. Please try again.\",\n      type: \"error\",\n    });\n    return { accessToken: null, username: null };\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EAChE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/B,sDAAsD,EACtD;MACEJ,MAAM,EAAEA,MAAM;MACdC,QAAQ,EAAEA;IACZ,CACF,CAAC;IACD,MAAM;MAAEI,WAAW;MAAEC;IAAS,CAAC,GAAGH,QAAQ,CAACI,IAAI;IAE/C,IAAI,CAACF,WAAW,IAAI,CAACC,QAAQ,EAAE;MAC7B,MAAM,IAAIE,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IAEAC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAAC;MAAEL,WAAW;MAAEC;IAAS,CAAC,CAAC;IACtCK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,WAAW,CAAC;IAC1CM,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEN,QAAQ,CAAC;IAC1CJ,QAAQ,CAAC;MACPW,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,mBAAmB;MAC5BC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,OAAO;MAAEV,WAAW;MAAEC;IAAS,CAAC;EAClC,CAAC,CAAC,OAAOU,GAAG,EAAE;IACZP,OAAO,CAACQ,KAAK,CAAC,cAAc,EAAED,GAAG,CAAC;IAClCd,QAAQ,CAAC;MACPW,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,iCAAiC;MAC1CC,IAAI,EAAE;IACR,CAAC,CAAC;IACF,OAAO;MAAEV,WAAW,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC;EAC9C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}